// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mittwald/goharbor-client/apiv2/model"
)

// GetSystemCVEWhitelistReader is a Reader for the GetSystemCVEWhitelist structure.
type GetSystemCVEWhitelistReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemCVEWhitelistReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSystemCVEWhitelistOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSystemCVEWhitelistUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSystemCVEWhitelistInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetSystemCVEWhitelistOK creates a GetSystemCVEWhitelistOK with default headers values
func NewGetSystemCVEWhitelistOK() *GetSystemCVEWhitelistOK {
	return &GetSystemCVEWhitelistOK{}
}

/*GetSystemCVEWhitelistOK handles this case with default header values.

Successfully retrieved the CVE whitelist.
*/
type GetSystemCVEWhitelistOK struct {
	Payload *model.CVEWhitelist
}

func (o *GetSystemCVEWhitelistOK) Error() string {
	return fmt.Sprintf("[GET /system/CVEWhitelist][%d] getSystemCVEWhitelistOK  %+v", 200, o.Payload)
}

func (o *GetSystemCVEWhitelistOK) GetPayload() *model.CVEWhitelist {
	return o.Payload
}

func (o *GetSystemCVEWhitelistOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.CVEWhitelist)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemCVEWhitelistUnauthorized creates a GetSystemCVEWhitelistUnauthorized with default headers values
func NewGetSystemCVEWhitelistUnauthorized() *GetSystemCVEWhitelistUnauthorized {
	return &GetSystemCVEWhitelistUnauthorized{}
}

/*GetSystemCVEWhitelistUnauthorized handles this case with default header values.

User is not authenticated.
*/
type GetSystemCVEWhitelistUnauthorized struct {
}

func (o *GetSystemCVEWhitelistUnauthorized) Error() string {
	return fmt.Sprintf("[GET /system/CVEWhitelist][%d] getSystemCVEWhitelistUnauthorized ", 401)
}

func (o *GetSystemCVEWhitelistUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSystemCVEWhitelistInternalServerError creates a GetSystemCVEWhitelistInternalServerError with default headers values
func NewGetSystemCVEWhitelistInternalServerError() *GetSystemCVEWhitelistInternalServerError {
	return &GetSystemCVEWhitelistInternalServerError{}
}

/*GetSystemCVEWhitelistInternalServerError handles this case with default header values.

Unexpected internal errors.
*/
type GetSystemCVEWhitelistInternalServerError struct {
}

func (o *GetSystemCVEWhitelistInternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/CVEWhitelist][%d] getSystemCVEWhitelistInternalServerError ", 500)
}

func (o *GetSystemCVEWhitelistInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
