// Code generated by go-swagger; DO NOT EDIT.

package scanner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/testwill/goharbor-client/v5/apiv2/model"
)

// DeleteScannerReader is a Reader for the DeleteScanner structure.
type DeleteScannerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteScannerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteScannerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteScannerUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteScannerForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteScannerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteScannerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteScannerOK creates a DeleteScannerOK with default headers values
func NewDeleteScannerOK() *DeleteScannerOK {
	return &DeleteScannerOK{}
}

/*DeleteScannerOK handles this case with default header values.

Deleted successfully and return the deleted registration
*/
type DeleteScannerOK struct {
	Payload *model.ScannerRegistration
}

func (o *DeleteScannerOK) Error() string {
	return fmt.Sprintf("[DELETE /scanners/{registration_id}][%d] deleteScannerOK  %+v", 200, o.Payload)
}

func (o *DeleteScannerOK) GetPayload() *model.ScannerRegistration {
	return o.Payload
}

func (o *DeleteScannerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ScannerRegistration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScannerUnauthorized creates a DeleteScannerUnauthorized with default headers values
func NewDeleteScannerUnauthorized() *DeleteScannerUnauthorized {
	return &DeleteScannerUnauthorized{}
}

/*DeleteScannerUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteScannerUnauthorized struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *DeleteScannerUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /scanners/{registration_id}][%d] deleteScannerUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteScannerUnauthorized) GetPayload() *model.Errors {
	return o.Payload
}

func (o *DeleteScannerUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScannerForbidden creates a DeleteScannerForbidden with default headers values
func NewDeleteScannerForbidden() *DeleteScannerForbidden {
	return &DeleteScannerForbidden{}
}

/*DeleteScannerForbidden handles this case with default header values.

Forbidden
*/
type DeleteScannerForbidden struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *DeleteScannerForbidden) Error() string {
	return fmt.Sprintf("[DELETE /scanners/{registration_id}][%d] deleteScannerForbidden  %+v", 403, o.Payload)
}

func (o *DeleteScannerForbidden) GetPayload() *model.Errors {
	return o.Payload
}

func (o *DeleteScannerForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScannerNotFound creates a DeleteScannerNotFound with default headers values
func NewDeleteScannerNotFound() *DeleteScannerNotFound {
	return &DeleteScannerNotFound{}
}

/*DeleteScannerNotFound handles this case with default header values.

Not found
*/
type DeleteScannerNotFound struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *DeleteScannerNotFound) Error() string {
	return fmt.Sprintf("[DELETE /scanners/{registration_id}][%d] deleteScannerNotFound  %+v", 404, o.Payload)
}

func (o *DeleteScannerNotFound) GetPayload() *model.Errors {
	return o.Payload
}

func (o *DeleteScannerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteScannerInternalServerError creates a DeleteScannerInternalServerError with default headers values
func NewDeleteScannerInternalServerError() *DeleteScannerInternalServerError {
	return &DeleteScannerInternalServerError{}
}

/*DeleteScannerInternalServerError handles this case with default header values.

Internal server error
*/
type DeleteScannerInternalServerError struct {
	/*The ID of the corresponding request for the response
	 */
	XRequestID string

	Payload *model.Errors
}

func (o *DeleteScannerInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /scanners/{registration_id}][%d] deleteScannerInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteScannerInternalServerError) GetPayload() *model.Errors {
	return o.Payload
}

func (o *DeleteScannerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header X-Request-Id
	o.XRequestID = response.GetHeader("X-Request-Id")

	o.Payload = new(model.Errors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
