// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/mittwald/goharbor-client/v3/apiv2/model/legacy"
)

// NewPutProjectsProjectIDImmutabletagrulesIDParams creates a new PutProjectsProjectIDImmutabletagrulesIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutProjectsProjectIDImmutabletagrulesIDParams() *PutProjectsProjectIDImmutabletagrulesIDParams {
	return &PutProjectsProjectIDImmutabletagrulesIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutProjectsProjectIDImmutabletagrulesIDParamsWithTimeout creates a new PutProjectsProjectIDImmutabletagrulesIDParams object
// with the ability to set a timeout on a request.
func NewPutProjectsProjectIDImmutabletagrulesIDParamsWithTimeout(timeout time.Duration) *PutProjectsProjectIDImmutabletagrulesIDParams {
	return &PutProjectsProjectIDImmutabletagrulesIDParams{
		timeout: timeout,
	}
}

// NewPutProjectsProjectIDImmutabletagrulesIDParamsWithContext creates a new PutProjectsProjectIDImmutabletagrulesIDParams object
// with the ability to set a context for a request.
func NewPutProjectsProjectIDImmutabletagrulesIDParamsWithContext(ctx context.Context) *PutProjectsProjectIDImmutabletagrulesIDParams {
	return &PutProjectsProjectIDImmutabletagrulesIDParams{
		Context: ctx,
	}
}

// NewPutProjectsProjectIDImmutabletagrulesIDParamsWithHTTPClient creates a new PutProjectsProjectIDImmutabletagrulesIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutProjectsProjectIDImmutabletagrulesIDParamsWithHTTPClient(client *http.Client) *PutProjectsProjectIDImmutabletagrulesIDParams {
	return &PutProjectsProjectIDImmutabletagrulesIDParams{
		HTTPClient: client,
	}
}

/* PutProjectsProjectIDImmutabletagrulesIDParams contains all the parameters to send to the API endpoint
   for the put projects project ID immutabletagrules ID operation.

   Typically these are written to a http.Request.
*/
type PutProjectsProjectIDImmutabletagrulesIDParams struct {

	// RetentionRule.
	RetentionRule *legacy.RetentionRule

	/* ID.

	   Immutable tag rule ID.

	   Format: int64
	*/
	ID int64

	/* ProjectID.

	   Relevant project ID.

	   Format: int64
	*/
	ProjectID int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put projects project ID immutabletagrules ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithDefaults() *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put projects project ID immutabletagrules ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithTimeout(timeout time.Duration) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithContext(ctx context.Context) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithHTTPClient(client *http.Client) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRetentionRule adds the retentionRule to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithRetentionRule(retentionRule *legacy.RetentionRule) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetRetentionRule(retentionRule)
	return o
}

// SetRetentionRule adds the retentionRule to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetRetentionRule(retentionRule *legacy.RetentionRule) {
	o.RetentionRule = retentionRule
}

// WithID adds the id to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithID(id int64) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetID(id int64) {
	o.ID = id
}

// WithProjectID adds the projectID to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WithProjectID(projectID int64) *PutProjectsProjectIDImmutabletagrulesIDParams {
	o.SetProjectID(projectID)
	return o
}

// SetProjectID adds the projectId to the put projects project ID immutabletagrules ID params
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) SetProjectID(projectID int64) {
	o.ProjectID = projectID
}

// WriteToRequest writes these params to a swagger request
func (o *PutProjectsProjectIDImmutabletagrulesIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.RetentionRule != nil {
		if err := r.SetBodyParam(o.RetentionRule); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt64(o.ID)); err != nil {
		return err
	}

	// path param project_id
	if err := r.SetPathParam("project_id", swag.FormatInt64(o.ProjectID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
