// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	runtime "github.com/go-openapi/runtime"
	mock "github.com/stretchr/testify/mock"

	statistic "github.com/mittwald/goharbor-client/v5/apiv2/internal/api/client/statistic"
)

// MockStatisticClientService is an autogenerated mock type for the ClientService type
type MockStatisticClientService struct {
	mock.Mock
}

// GetStatistic provides a mock function with given fields: params, authInfo
func (_m *MockStatisticClientService) GetStatistic(params *statistic.GetStatisticParams, authInfo runtime.ClientAuthInfoWriter) (*statistic.GetStatisticOK, error) {
	ret := _m.Called(params, authInfo)

	var r0 *statistic.GetStatisticOK
	if rf, ok := ret.Get(0).(func(*statistic.GetStatisticParams, runtime.ClientAuthInfoWriter) *statistic.GetStatisticOK); ok {
		r0 = rf(params, authInfo)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*statistic.GetStatisticOK)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*statistic.GetStatisticParams, runtime.ClientAuthInfoWriter) error); ok {
		r1 = rf(params, authInfo)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetTransport provides a mock function with given fields: transport
func (_m *MockStatisticClientService) SetTransport(transport runtime.ClientTransport) {
	_m.Called(transport)
}

type mockConstructorTestingTNewMockStatisticClientService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockStatisticClientService creates a new instance of MockStatisticClientService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockStatisticClientService(t mockConstructorTestingTNewMockStatisticClientService) *MockStatisticClientService {
	mock := &MockStatisticClientService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
